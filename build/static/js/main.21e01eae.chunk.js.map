{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/contacts/contacts-operations.js","redux/auth/auth-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","components/Container/Container.jsx","components/MainNavigation/MainNavigation.jsx","components/AuthNavigation/AuthNavigation.jsx","imgs/monster-icon.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["getIsAuthenticated","state","auth","isLogedIn","getUserEmail","user","email","initialUserState","name","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","__","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","fetchContacts","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","addContact","number","contact","addContactRequest","post","then","addContactSuccess","toast","catch","addContactError","removeContact","contactID","removeContactRequest","delete","removeContactSuccess","removeContactError","defaults","baseURL","headers","common","Authorization","signup","credentials","registerRequest","response","autoClose","login","loginRequest","logout","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","items","filter","item","id","addFilter","loading","getItems","contacts","getLoadingItems","getFilterValue","getFilteredContactList","createSelector","allContacts","normalizedFilter","toLocaleLowerCase","includes","createAction","Container","children","className","MainNavigation","isLoggedIn","useSelector","exact","to","activeClassName","AuthNavigation","UserMenu","useDispatch","onLogout","useCallback","src","defaultAvatar","alt","width","type","onClick","AppBar","PrivateRoute","component","isAuthenticated","redirectTo","routeProps","PublicRoute","restricted","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","App","useEffect","console","log","fallback","Spinner","path","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","authPersistConfig","key","storage","whitelist","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21e01eae.chunk.js","sourcesContent":["export const getIsAuthenticated = state => state.auth.isLogedIn;\r\n\r\nexport const getUserEmail = state => state.auth.user.email;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  // registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  // loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  // logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  // getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: (_, __) => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isLogedIn = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isLogedIn,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest);\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactSuccess(data));\r\n      toast('Contact was successfully added');\r\n    })\r\n    .catch(error => {\r\n      dispatch(addContactError(error.message));\r\n      toast('Something went wrong. Please, retry');\r\n    });\r\n};\r\n\r\nexport const removeContact = contactID => dispatch => {\r\n  dispatch(removeContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactID}`)\r\n    .then(() => {\r\n      dispatch(removeContactSuccess(contactID));\r\n      toast('Contact was successfully removed');\r\n    })\r\n    .catch(error => {\r\n      dispatch(removeContactError(error.message));\r\n      toast('Something went wrong. Please, retry');\r\n    });\r\n};\r\n","import { SignalWifi1BarRounded } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signup = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n    toast('You have been successfully signed up!', {\r\n      autoClose: 2000,\r\n    });\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n    toast('Something went wrong. Please, retry');\r\n  }\r\n};\r\n\r\nexport const login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n    toast('Hey!You are logged in!', {\r\n      autoClose: 2000,\r\n    });\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n\r\n    toast('Wrong email or password');\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n    toast('You are logged out. Bye!', {\r\n      autoClose: 2000,\r\n    });\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  addFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  // \"_\" заменяет неиспользуемый параметр(в данном случае state)\r\n  [addFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getLoadingItems = state => state.contacts.loading;\r\n\r\nexport const getFilterValue = state => state.contacts.filter;\r\n\r\nexport const getFilteredContactList = createSelector(\r\n  [getItems, getFilterValue],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return allContacts.filter(item =>\r\n      item.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction(\r\n  'contacts/removeContactRequest',\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  'contacts/removeContactSuccess',\r\n);\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\nexport const addFilter = createAction('contacts/addFilter');\r\n","import PropTypes from 'prop-types';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '..//..//redux/auth/auth-selectors';\r\n\r\nexport default function MainNavigation() {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <nav className=\"NavList\">\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink--active\"\r\n      >\r\n        Main\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          exact\r\n          to=\"/contacts\"\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNavigation = () => (\r\n  <nav className=\"NavList\">\r\n    <NavLink\r\n      exact\r\n      to=\"/login\"\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Login\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      exact\r\n      to=\"/register\"\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Register\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default AuthNavigation;\r\n","export default __webpack_public_path__ + \"static/media/monster-icon.5289c9b1.png\";","import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getUserEmail, logout } from '..//..//redux/auth';\r\n\r\nimport defaultAvatar from '..//..//imgs/monster-icon.png';\r\n\r\nimport './UserMenu.scss';\r\n\r\n// const mapStateToProps = state => ({\r\n//   email: getUserEmail(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: logout,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(getUserEmail);\r\n\r\n  const onLogout = useCallback(() => dispatch(logout()), [dispatch]);\r\n\r\n  return (\r\n    <div className=\"UserMenu\">\r\n      <img className=\"AvatarImg\" src={defaultAvatar} alt=\"\" width=\"40\" />\r\n      <span className=\"User\">{email}</span>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport MainNavigation from '../MainNavigation';\r\nimport AuthNavigation from '../AuthNavigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth';\r\n\r\nimport './AppBar.scss';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <MainNavigation />\r\n\r\n      {isLoggedIn ? <UserMenu /> : <AuthNavigation />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '..//..//redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '..//..//redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport { fetchContacts } from './redux/contacts/contacts-operations';\n// import { getItems, getLoadingItems } from './redux/contacts/contacts-selectors';\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components//PublicRoute/PublicRoute';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nconst HomePage = lazy(() =>\n  import('./pages/MainPage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./pages/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  // const items = useSelector(getItems);\n  // const isLoading = useSelector(getLoadingItems);\n\n  useEffect(() => {\n    console.log('hi');\n    dispatch(getCurrentUser());\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomePage />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsPage />\n          </PrivateRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginPage />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/\">\n            <RegisterPage />\n          </PublicRoute>\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Container>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts';\r\nimport authReducer from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}